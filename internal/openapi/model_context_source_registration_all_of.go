/*
ETSI ISG CIM / NGSI-LD API

This OAS file describes the NGSI-LD API defined by the ETSI ISG CIM group. This Cross-domain Context Information Management API allows to provide, consume and subscribe to context information in multiple scenarios and involving multiple stakeholders

API version: latest
Contact: NGSI-LD@etsi.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ContextSourceRegistrationAllOf struct for ContextSourceRegistrationAllOf
type ContextSourceRegistrationAllOf struct {
	Id string `json:"id"`
	Type string `json:"type"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	ModifiedAt *time.Time `json:"modifiedAt,omitempty"`
}

// NewContextSourceRegistrationAllOf instantiates a new ContextSourceRegistrationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContextSourceRegistrationAllOf(id string, type_ string) *ContextSourceRegistrationAllOf {
	this := ContextSourceRegistrationAllOf{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewContextSourceRegistrationAllOfWithDefaults instantiates a new ContextSourceRegistrationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContextSourceRegistrationAllOfWithDefaults() *ContextSourceRegistrationAllOf {
	this := ContextSourceRegistrationAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *ContextSourceRegistrationAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContextSourceRegistrationAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContextSourceRegistrationAllOf) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *ContextSourceRegistrationAllOf) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ContextSourceRegistrationAllOf) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ContextSourceRegistrationAllOf) SetType(v string) {
	o.Type = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ContextSourceRegistrationAllOf) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextSourceRegistrationAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ContextSourceRegistrationAllOf) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ContextSourceRegistrationAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *ContextSourceRegistrationAllOf) GetModifiedAt() time.Time {
	if o == nil || o.ModifiedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextSourceRegistrationAllOf) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || o.ModifiedAt == nil {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *ContextSourceRegistrationAllOf) HasModifiedAt() bool {
	if o != nil && o.ModifiedAt != nil {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *ContextSourceRegistrationAllOf) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

func (o ContextSourceRegistrationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.ModifiedAt != nil {
		toSerialize["modifiedAt"] = o.ModifiedAt
	}
	return json.Marshal(toSerialize)
}

type NullableContextSourceRegistrationAllOf struct {
	value *ContextSourceRegistrationAllOf
	isSet bool
}

func (v NullableContextSourceRegistrationAllOf) Get() *ContextSourceRegistrationAllOf {
	return v.value
}

func (v *NullableContextSourceRegistrationAllOf) Set(val *ContextSourceRegistrationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableContextSourceRegistrationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableContextSourceRegistrationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContextSourceRegistrationAllOf(val *ContextSourceRegistrationAllOf) *NullableContextSourceRegistrationAllOf {
	return &NullableContextSourceRegistrationAllOf{value: val, isSet: true}
}

func (v NullableContextSourceRegistrationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContextSourceRegistrationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


