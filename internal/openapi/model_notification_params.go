/*
ETSI ISG CIM / NGSI-LD API

This OAS file describes the NGSI-LD API defined by the ETSI ISG CIM group. This Cross-domain Context Information Management API allows to provide, consume and subscribe to context information in multiple scenarios and involving multiple stakeholders

API version: latest
Contact: NGSI-LD@etsi.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// NotificationParams struct for NotificationParams
type NotificationParams struct {
	Attributes []string `json:"attributes,omitempty"`
	Format *string `json:"format,omitempty"`
	Endpoint Endpoint `json:"endpoint"`
	Status *string `json:"status,omitempty"`
	TimesSent *float32 `json:"timesSent,omitempty"`
	LastNotification *time.Time `json:"lastNotification,omitempty"`
	LastFailure *time.Time `json:"lastFailure,omitempty"`
	LastSuccess *time.Time `json:"lastSuccess,omitempty"`
}

// NewNotificationParams instantiates a new NotificationParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationParams(endpoint Endpoint) *NotificationParams {
	this := NotificationParams{}
	this.Endpoint = endpoint
	return &this
}

// NewNotificationParamsWithDefaults instantiates a new NotificationParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationParamsWithDefaults() *NotificationParams {
	this := NotificationParams{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *NotificationParams) GetAttributes() []string {
	if o == nil || o.Attributes == nil {
		var ret []string
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetAttributesOk() ([]string, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *NotificationParams) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []string and assigns it to the Attributes field.
func (o *NotificationParams) SetAttributes(v []string) {
	o.Attributes = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *NotificationParams) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *NotificationParams) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *NotificationParams) SetFormat(v string) {
	o.Format = &v
}

// GetEndpoint returns the Endpoint field value
func (o *NotificationParams) GetEndpoint() Endpoint {
	if o == nil {
		var ret Endpoint
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetEndpointOk() (*Endpoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *NotificationParams) SetEndpoint(v Endpoint) {
	o.Endpoint = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NotificationParams) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NotificationParams) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NotificationParams) SetStatus(v string) {
	o.Status = &v
}

// GetTimesSent returns the TimesSent field value if set, zero value otherwise.
func (o *NotificationParams) GetTimesSent() float32 {
	if o == nil || o.TimesSent == nil {
		var ret float32
		return ret
	}
	return *o.TimesSent
}

// GetTimesSentOk returns a tuple with the TimesSent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetTimesSentOk() (*float32, bool) {
	if o == nil || o.TimesSent == nil {
		return nil, false
	}
	return o.TimesSent, true
}

// HasTimesSent returns a boolean if a field has been set.
func (o *NotificationParams) HasTimesSent() bool {
	if o != nil && o.TimesSent != nil {
		return true
	}

	return false
}

// SetTimesSent gets a reference to the given float32 and assigns it to the TimesSent field.
func (o *NotificationParams) SetTimesSent(v float32) {
	o.TimesSent = &v
}

// GetLastNotification returns the LastNotification field value if set, zero value otherwise.
func (o *NotificationParams) GetLastNotification() time.Time {
	if o == nil || o.LastNotification == nil {
		var ret time.Time
		return ret
	}
	return *o.LastNotification
}

// GetLastNotificationOk returns a tuple with the LastNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetLastNotificationOk() (*time.Time, bool) {
	if o == nil || o.LastNotification == nil {
		return nil, false
	}
	return o.LastNotification, true
}

// HasLastNotification returns a boolean if a field has been set.
func (o *NotificationParams) HasLastNotification() bool {
	if o != nil && o.LastNotification != nil {
		return true
	}

	return false
}

// SetLastNotification gets a reference to the given time.Time and assigns it to the LastNotification field.
func (o *NotificationParams) SetLastNotification(v time.Time) {
	o.LastNotification = &v
}

// GetLastFailure returns the LastFailure field value if set, zero value otherwise.
func (o *NotificationParams) GetLastFailure() time.Time {
	if o == nil || o.LastFailure == nil {
		var ret time.Time
		return ret
	}
	return *o.LastFailure
}

// GetLastFailureOk returns a tuple with the LastFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetLastFailureOk() (*time.Time, bool) {
	if o == nil || o.LastFailure == nil {
		return nil, false
	}
	return o.LastFailure, true
}

// HasLastFailure returns a boolean if a field has been set.
func (o *NotificationParams) HasLastFailure() bool {
	if o != nil && o.LastFailure != nil {
		return true
	}

	return false
}

// SetLastFailure gets a reference to the given time.Time and assigns it to the LastFailure field.
func (o *NotificationParams) SetLastFailure(v time.Time) {
	o.LastFailure = &v
}

// GetLastSuccess returns the LastSuccess field value if set, zero value otherwise.
func (o *NotificationParams) GetLastSuccess() time.Time {
	if o == nil || o.LastSuccess == nil {
		var ret time.Time
		return ret
	}
	return *o.LastSuccess
}

// GetLastSuccessOk returns a tuple with the LastSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationParams) GetLastSuccessOk() (*time.Time, bool) {
	if o == nil || o.LastSuccess == nil {
		return nil, false
	}
	return o.LastSuccess, true
}

// HasLastSuccess returns a boolean if a field has been set.
func (o *NotificationParams) HasLastSuccess() bool {
	if o != nil && o.LastSuccess != nil {
		return true
	}

	return false
}

// SetLastSuccess gets a reference to the given time.Time and assigns it to the LastSuccess field.
func (o *NotificationParams) SetLastSuccess(v time.Time) {
	o.LastSuccess = &v
}

func (o NotificationParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if true {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TimesSent != nil {
		toSerialize["timesSent"] = o.TimesSent
	}
	if o.LastNotification != nil {
		toSerialize["lastNotification"] = o.LastNotification
	}
	if o.LastFailure != nil {
		toSerialize["lastFailure"] = o.LastFailure
	}
	if o.LastSuccess != nil {
		toSerialize["lastSuccess"] = o.LastSuccess
	}
	return json.Marshal(toSerialize)
}

type NullableNotificationParams struct {
	value *NotificationParams
	isSet bool
}

func (v NullableNotificationParams) Get() *NotificationParams {
	return v.value
}

func (v *NullableNotificationParams) Set(val *NotificationParams) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationParams) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationParams(val *NotificationParams) *NullableNotificationParams {
	return &NullableNotificationParams{value: val, isSet: true}
}

func (v NullableNotificationParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


