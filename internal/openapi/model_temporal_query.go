/*
ETSI ISG CIM / NGSI-LD API

This OAS file describes the NGSI-LD API defined by the ETSI ISG CIM group. This Cross-domain Context Information Management API allows to provide, consume and subscribe to context information in multiple scenarios and involving multiple stakeholders

API version: latest
Contact: NGSI-LD@etsi.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// TemporalQuery struct for TemporalQuery
type TemporalQuery struct {
	Timerel *string `json:"timerel,omitempty"`
	TimeAt *time.Time `json:"timeAt,omitempty"`
	EndTimeAt *time.Time `json:"endTimeAt,omitempty"`
	Timeproperty *string `json:"timeproperty,omitempty"`
}

// NewTemporalQuery instantiates a new TemporalQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemporalQuery() *TemporalQuery {
	this := TemporalQuery{}
	return &this
}

// NewTemporalQueryWithDefaults instantiates a new TemporalQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemporalQueryWithDefaults() *TemporalQuery {
	this := TemporalQuery{}
	return &this
}

// GetTimerel returns the Timerel field value if set, zero value otherwise.
func (o *TemporalQuery) GetTimerel() string {
	if o == nil || o.Timerel == nil {
		var ret string
		return ret
	}
	return *o.Timerel
}

// GetTimerelOk returns a tuple with the Timerel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemporalQuery) GetTimerelOk() (*string, bool) {
	if o == nil || o.Timerel == nil {
		return nil, false
	}
	return o.Timerel, true
}

// HasTimerel returns a boolean if a field has been set.
func (o *TemporalQuery) HasTimerel() bool {
	if o != nil && o.Timerel != nil {
		return true
	}

	return false
}

// SetTimerel gets a reference to the given string and assigns it to the Timerel field.
func (o *TemporalQuery) SetTimerel(v string) {
	o.Timerel = &v
}

// GetTimeAt returns the TimeAt field value if set, zero value otherwise.
func (o *TemporalQuery) GetTimeAt() time.Time {
	if o == nil || o.TimeAt == nil {
		var ret time.Time
		return ret
	}
	return *o.TimeAt
}

// GetTimeAtOk returns a tuple with the TimeAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemporalQuery) GetTimeAtOk() (*time.Time, bool) {
	if o == nil || o.TimeAt == nil {
		return nil, false
	}
	return o.TimeAt, true
}

// HasTimeAt returns a boolean if a field has been set.
func (o *TemporalQuery) HasTimeAt() bool {
	if o != nil && o.TimeAt != nil {
		return true
	}

	return false
}

// SetTimeAt gets a reference to the given time.Time and assigns it to the TimeAt field.
func (o *TemporalQuery) SetTimeAt(v time.Time) {
	o.TimeAt = &v
}

// GetEndTimeAt returns the EndTimeAt field value if set, zero value otherwise.
func (o *TemporalQuery) GetEndTimeAt() time.Time {
	if o == nil || o.EndTimeAt == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTimeAt
}

// GetEndTimeAtOk returns a tuple with the EndTimeAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemporalQuery) GetEndTimeAtOk() (*time.Time, bool) {
	if o == nil || o.EndTimeAt == nil {
		return nil, false
	}
	return o.EndTimeAt, true
}

// HasEndTimeAt returns a boolean if a field has been set.
func (o *TemporalQuery) HasEndTimeAt() bool {
	if o != nil && o.EndTimeAt != nil {
		return true
	}

	return false
}

// SetEndTimeAt gets a reference to the given time.Time and assigns it to the EndTimeAt field.
func (o *TemporalQuery) SetEndTimeAt(v time.Time) {
	o.EndTimeAt = &v
}

// GetTimeproperty returns the Timeproperty field value if set, zero value otherwise.
func (o *TemporalQuery) GetTimeproperty() string {
	if o == nil || o.Timeproperty == nil {
		var ret string
		return ret
	}
	return *o.Timeproperty
}

// GetTimepropertyOk returns a tuple with the Timeproperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemporalQuery) GetTimepropertyOk() (*string, bool) {
	if o == nil || o.Timeproperty == nil {
		return nil, false
	}
	return o.Timeproperty, true
}

// HasTimeproperty returns a boolean if a field has been set.
func (o *TemporalQuery) HasTimeproperty() bool {
	if o != nil && o.Timeproperty != nil {
		return true
	}

	return false
}

// SetTimeproperty gets a reference to the given string and assigns it to the Timeproperty field.
func (o *TemporalQuery) SetTimeproperty(v string) {
	o.Timeproperty = &v
}

func (o TemporalQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Timerel != nil {
		toSerialize["timerel"] = o.Timerel
	}
	if o.TimeAt != nil {
		toSerialize["timeAt"] = o.TimeAt
	}
	if o.EndTimeAt != nil {
		toSerialize["endTimeAt"] = o.EndTimeAt
	}
	if o.Timeproperty != nil {
		toSerialize["timeproperty"] = o.Timeproperty
	}
	return json.Marshal(toSerialize)
}

type NullableTemporalQuery struct {
	value *TemporalQuery
	isSet bool
}

func (v NullableTemporalQuery) Get() *TemporalQuery {
	return v.value
}

func (v *NullableTemporalQuery) Set(val *TemporalQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableTemporalQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableTemporalQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemporalQuery(val *TemporalQuery) *NullableTemporalQuery {
	return &NullableTemporalQuery{value: val, isSet: true}
}

func (v NullableTemporalQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemporalQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


