openapi: 3.0.3
info:
  contact:
    email: NGSI-LD@etsi.org
  description: "This OAS file describes the NGSI-LD API defined by the ETSI ISG CIM\
    \ group. This Cross-domain Context Information Management API allows to provide,\
    \ consume and subscribe to context information in multiple scenarios and involving\
    \ multiple stakeholders"
  title: ETSI ISG CIM / NGSI-LD API
  version: latest
externalDocs:
  description: Find out more about the ETSI ISG Context Information Management
  url: https://portal.etsi.org/tb.aspx?tbid=854&SubTB=854
servers:
- url: /
tags:
- description: European Telecommunications Standards Institute
  externalDocs:
    description: Find out more
    url: http://www.etsi.org
  name: ETSI
- description: Context Information Management
  externalDocs:
    description: Find out more
    url: https://portal.etsi.org/tb.aspx?tbid=854&SubTB=854
  name: CIM
- description: JSON for Linked Data
  externalDocs:
    description: Find out more
    url: https://json-ld.org/
  name: JSON-LD
- description: API defined by the ETSI ISG CIM
  externalDocs:
    description: Preliminary Specification
    url: http://www.etsi.org/deliver/etsi_gs/CIM/001_099/004/01.01.01_60/gs_CIM004v010101p.pdf
  name: NGSI-LD API
paths:
  /entities/:
    get:
      description: Retrieve a set of entities which matches a specific query from
        an NGSI-LD system
      operationId: queryEntities
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Comma separated list of URIs to be retrieved
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Regular expression that must be matched by Entity ids
        explode: true
        in: query
        name: idPattern
        required: false
        schema:
          format: regexp
          type: string
        style: form
      - description: Comma separated list of Entity type names to be retrieved
        explode: true
        in: query
        name: type
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Comma separated list of attribute names (properties or relationships)
          to be retrieved
        explode: true
        in: query
        name: attrs
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Query
        explode: true
        in: query
        name: q
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Geo-relationship
        explode: true
        in: query
        name: georel
        required: false
        schema:
          $ref: '#/components/schemas/georel'
        style: form
      - description: Geometry
        explode: true
        in: query
        name: geometry
        required: false
        schema:
          $ref: '#/components/schemas/geometryEnum'
        style: form
      - description: Coordinates serialized as a string
        explode: true
        in: query
        name: coordinates
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: The name of the property that contains the geo-spatial data that
          will be used to resolve the geoquery
        explode: true
        in: query
        name: geoproperty
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Context Source Filter
        explode: true
        in: query
        name: csf
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Options dictionary
        explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - keyValues
          - sysAttrs
          type: string
        style: form
      - description: Link header to be used as described in the json-ld spec.
        explode: false
        in: header
        name: Link
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/EntityList-example.json
              schema:
                $ref: '#/components/schemas/EntityList'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Context Information
      - Entities
    post:
      description: Create a new Entity within an NGSI-LD system
      operationId: createEntity
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Entity'
        required: true
      responses:
        "201":
          description: Created. Contains the resource URI of the created Entity
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "409":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Already exists
        "422":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unprocessable Entity
      tags:
      - Context Information
      - Entities
  /entities/{entityId}:
    delete:
      description: Removes an specific Entity from an NGSI-LD system
      operationId: removeEntityById
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Entity Type
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/Name'
        style: form
      responses:
        "204":
          description: No Content. The entity was removed successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Information
      - Entities
    get:
      description: Retrieve an specific Entity from an NGSI-LD system. It's possible
        to specify the Entity attributes to be retrieved by using query parameters
      operationId: retrieveEntityById
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Comma separated list of attribute names (properties or relationships)
          to be retrieved
        explode: true
        in: query
        name: attrs
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Entity Type
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/Name'
        style: form
      - description: Options dictionary
        explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - keyValues
          - sysAttrs
          type: string
        style: form
      - description: Link header to be used as described in the json-ld spec.
        explode: false
        in: header
        name: Link
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/Entity-example.json
              schema:
                $ref: '#/components/schemas/Entity'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Information
      - Entities
  /entities/{entityId}/attrs/:
    patch:
      description: Update existing Entity attributes within an NGSI-LD system
      operationId: updateEntityAttrs
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityFragment'
        required: true
      responses:
        "204":
          description: No Content.
        "207":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: Partial Success. Only the attributes included in the response
            payload were successfully updated
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Information
      - Entities
    post:
      description: Append new Entity attributes to an existing Entity within an NGSI-LD
        system
      operationId: appendEntityAttrs
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Indicates that no attribute overwrite shall be performed
        explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - noOverwrite
          type: string
        style: form
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityFragment'
        required: true
      responses:
        "204":
          description: No Content
        "207":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/UpdateResult'
          description: Partial Success. Only the attributes included in the response
            payload were successfully appended
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Information
      - Entities
  /entities/{entityId}/attrs/{attrId}:
    delete:
      description: Removes an existing Entity attribute within an NGSI-LD system
      operationId: removeEntityAttr
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Attribute Id
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Name'
        style: simple
      responses:
        "204":
          description: No Content.
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Information
      - Entities
    patch:
      description: Update existing Entity attributes within an NGSI-LD system
      operationId: partialAttrUpdate
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Attribute Id
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Name'
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityFragment'
        required: true
      responses:
        "204":
          description: No Content.
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Information
      - Entities
  /subscriptions/:
    get:
      description: Retrieves the subscriptions available in an NGSI-LD system
      operationId: retrieveSubscriptions
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/SubscriptionList-example.json
              schema:
                $ref: '#/components/schemas/SubscriptionList'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Context Subscription
      - Subscriptions
    post:
      description: Creates a new Subscription within an NGSI-LD system
      operationId: createSubscription
      parameters:
      - explode: false
        in: header
        name: NGSILD-Tenant
        required: true
        schema:
          default: orion
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        "201":
          description: Created. Contains the resource URI of the created Subscription
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "409":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Already exists
      tags:
      - Context Subscription
      - Subscriptions
  /subscriptions/{subscriptionId}:
    delete:
      description: Removes a specific Subscription from an NGSI-LD system
      operationId: removeSubscription
      parameters:
      - description: Subscription Id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "204":
          description: No Content. The Subscription was removed successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Subscription
      - Subscriptions
    get:
      description: Retrieves a specific Subscription from an NGSI-LD system
      operationId: retrieveSubscriptionById
      parameters:
      - description: Subscription Id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/Subscription-example_C.4.json
              schema:
                $ref: '#/components/schemas/Subscription'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Subscription
      - Subscriptions
    patch:
      description: Updates a specific Subscription within an NGSI-LD system
      operationId: updateSubscription
      parameters:
      - description: Subscription Id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SubscriptionFragment'
        required: true
      responses:
        "204":
          description: No Content. The Subscription was updated successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Subscription
      - Subscriptions
  /csourceRegistrations/:
    get:
      description: Retrieve a set of context sources which matches a specific query
        from an NGSI-LD system
      operationId: queryCsources
      parameters:
      - description: Comma separated list of URIs to be retrieved
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Regular expression that must be matched by Entity ids
        explode: true
        in: query
        name: idPattern
        required: false
        schema:
          format: regexp
          type: string
        style: form
      - description: Comma separated list of Entity type names to be retrieved
        explode: true
        in: query
        name: type
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Comma separated list of attribute names (properties or relationships)
          to be retrieved
        explode: true
        in: query
        name: attrs
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Query
        explode: true
        in: query
        name: q
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Geo-relationship
        explode: true
        in: query
        name: georel
        required: false
        schema:
          $ref: '#/components/schemas/georel'
        style: form
      - description: Geometry
        explode: true
        in: query
        name: geometry
        required: false
        schema:
          $ref: '#/components/schemas/geometryEnum'
        style: form
      - description: Coordinates serialized as a string
        explode: true
        in: query
        name: coordinates
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: The name of the property that contains the geo-spatial data that
          will be used to resolve the geoquery
        explode: true
        in: query
        name: geoproperty
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/ContextSourceRegistrationList-example.json
              schema:
                $ref: '#/components/schemas/ContextSourceRegistrationList'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Context Sources
      - CSourceRegistrations
    post:
      description: Registers a new context source within an NGSI-LD system
      operationId: registerCsource
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ContextSourceRegistration'
        required: true
      responses:
        "201":
          description: Created. Contains the resource URI of the created Registration
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "409":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Already exists
      tags:
      - Context Sources
      - CSourceRegistrations
  /csourceRegistrations/{registrationId}:
    delete:
      description: Removes an specific context source registration within an NGSI-LD
        system
      operationId: removeCsource
      parameters:
      - description: Registration Id
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "204":
          description: No Content. The Registration was removed successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Sources
      - CSourceRegistrations
    get:
      description: Retrieves a specific context source registration from an NGSI-LD
        system
      operationId: retrieveCsource
      parameters:
      - description: Registration Id
        explode: false
        in: path
        name: registrationId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/
              schema:
                $ref: '#/components/schemas/ContextSourceRegistration'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Sources
      - CSourceRegistrations
  /csourceSubscriptions/:
    get:
      description: Retrieves the context source discovery subscriptions available
        in an NGSI-LD system
      operationId: retrieveCSourceSubscriptions
      parameters:
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/SubscriptionList-example.json
              schema:
                $ref: '#/components/schemas/SubscriptionList'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Context Sources
      - CSourceSubscriptions
    post:
      description: Creates a context source discovery Subscription within an NGSI-LD
        system
      operationId: createCSourceSubscription
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        "201":
          description: Created. Contains the resource URI of the created Subscription
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "409":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Already exists
      tags:
      - Context Sources
      - CSourceSubscriptions
  /csourceSubscriptions/{subscriptionId}:
    delete:
      description: Removes a specific Context Source Subscription from an NGSI-LD
        system
      operationId: removeCSourceSubscription
      parameters:
      - description: Subscription Id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "204":
          description: No Content. The Subscription was removed successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Sources
      - CSourceSubscriptions
    get:
      description: Retrieves a specific Subscription from an NGSI-LD system
      operationId: retrieveCSourceSubscriptionsById
      parameters:
      - description: Subscription Id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/Subscription-example_C.4.json
              schema:
                $ref: '#/components/schemas/Subscription'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Sources
      - CSourceSubscriptions
    patch:
      description: Updates a specific context source discovery Subscription within
        an NGSI-LD system
      operationId: updateCSourceSubscription
      parameters:
      - description: Subscription Id
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/SubscriptionFragment'
        required: true
      responses:
        "204":
          description: No Content. The Subscription was updated successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Context Sources
      - CSourceSubscriptions
  /entityOperations/create:
    post:
      description: Batch Entity creation
      operationId: batchEntityCreation
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityList'
        required: true
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: Success
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Batch Operations
      - Entities
  /entityOperations/update:
    post:
      description: Batch Entity update
      operationId: batchEntityUpdate
      parameters:
      - explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - noOverwrite
          type: string
        style: form
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityList'
        required: true
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: Success
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Batch Operations
      - Entities
  /entityOperations/upsert:
    post:
      description: Batch Entity upsert
      operationId: batchEntityUpsert
      parameters:
      - explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - replace
          - update
          type: string
        style: form
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityList'
        required: true
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: Success
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Batch Operations
      - Entities
  /entityOperations/delete:
    post:
      description: Batch Entity delete
      operationId: batchEntityDelete
      requestBody:
        content:
          application/ld+json:
            schema:
              items:
                format: uri
                type: string
              minItems: 1
              type: array
        required: true
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/BatchOperationResult'
          description: Success
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Batch Operations
      - Entities
  /temporal/entities/:
    get:
      description: Query temporal evolution of Entities from an NGSI-LD system
      operationId: queryTemporalEntities
      parameters:
      - description: Link header to be used as described in the json-ld spec.
        explode: false
        in: header
        name: Link
        required: false
        schema:
          type: string
        style: simple
      - description: Comma separated list of URIs to be retrieved
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Regular expression that must be matched by Entity ids
        explode: true
        in: query
        name: idPattern
        required: false
        schema:
          format: regexp
          type: string
        style: form
      - description: Comma separated list of Entity type names to be retrieved
        explode: true
        in: query
        name: type
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Comma separated list of attribute names (properties or relationships)
          to be retrieved
        explode: true
        in: query
        name: attrs
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Query
        explode: true
        in: query
        name: q
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Geo-relationship
        explode: true
        in: query
        name: georel
        required: false
        schema:
          $ref: '#/components/schemas/georel'
        style: form
      - description: Geometry
        explode: true
        in: query
        name: geometry
        required: false
        schema:
          $ref: '#/components/schemas/geometryEnum'
        style: form
      - description: Coordinates serialized as a string
        explode: true
        in: query
        name: coordinates
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: The name of the property that contains the geo-spatial data that
          will be used to resolve the geoquery
        explode: true
        in: query
        name: geoproperty
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Time relationship
        explode: true
        in: query
        name: timerel
        required: false
        schema:
          $ref: '#/components/schemas/timerel'
        style: form
      - description: The name of the property that contains the temporal data that
          will be used to resolve the temporal query
        explode: true
        in: query
        name: timeproperty
        required: false
        schema:
          $ref: '#/components/schemas/Name'
        style: form
      - description: start time for temporal query
        explode: true
        in: query
        name: timeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: end time for temporal query
        explode: true
        in: query
        name: endTimeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Context Source Filter
        explode: true
        in: query
        name: csf
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Size of the page to be returned
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Size of the page to be returned
        explode: true
        in: query
        name: pageAnchor
        required: false
        schema:
          format: uri
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Options dictionary
        explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - temporalValues
          - sysAttrs
          type: string
        style: form
      - description: Only retrieve last N instances
        explode: true
        in: query
        name: lastN
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/EntityTemporalList-example.json
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Temporal Evolution
      - Temporal
      - Temporal Retrieval
    post:
      description: Create or update temporal representation of an Entity within an
        NGSI-LD system
      operationId: createUpdateEntityTemporal
      requestBody:
        content:
          application/ld+json:
            examples:
              simple:
                externalValue: http://localhost:8090/examples/EntityTemporal-example_C5.5.3.json
            schema:
              $ref: '#/components/schemas/EntityTemporal'
        required: true
      responses:
        "201":
          description: Created. Contains the resource URI of the created Entity
        "204":
          description: Updated. No Content
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "409":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Already exists
        "422":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unprocessable Entity
      tags:
      - Temporal Evolution
      - Temporal
  /temporal/entities/{entityId}:
    delete:
      description: Removes the temporal representation of an Entity from an NGSI-LD
        system
      operationId: removeEntityTemporalById
      parameters:
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Entity Type
        explode: true
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/Name'
        style: form
      responses:
        "204":
          description: No Content. The entity was removed successfully
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Temporal Evolution
      - Temporal
    get:
      description: Retrieve the temporal representation of an specific Entity from
        an NGSI-LD system. It's possible to specify the Entity attributes to be retrieved
        by using query parameters
      operationId: retrieveEntityTemporalById
      parameters:
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Link header to be used as described in the json-ld spec.
        explode: false
        in: header
        name: Link
        required: false
        schema:
          type: string
        style: simple
      - description: Comma separated list of attribute names (properties or relationships)
          to be retrieved
        explode: true
        in: query
        name: attrs
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      - description: Options dictionary
        explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - temporalValues
          - sysAttrs
          type: string
        style: form
      - description: Time relationship
        explode: true
        in: query
        name: timerel
        required: false
        schema:
          $ref: '#/components/schemas/timerel'
        style: form
      - description: The name of the property that contains the temporal data that
          will be used to resolve the temporal query
        explode: true
        in: query
        name: timeproperty
        required: false
        schema:
          $ref: '#/components/schemas/Name'
        style: form
      - description: start time for temporal query
        explode: true
        in: query
        name: timeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: end time for temporal query
        explode: true
        in: query
        name: endTimeAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only retrieve last N instances
        explode: true
        in: query
        name: lastN
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/EntityTemporal-example_C5.5.3.json
              schema:
                $ref: '#/components/schemas/EntityTemporal'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemporal'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Temporal Evolution
      - Temporal
      - Temporal Retrieval
  /temporal/entities/{entityId}/attrs/:
    post:
      description: Add new attributes to an existing Temporal Entity within an NGSI-LD
        system
      operationId: addTemporalEntityAttrs
      parameters:
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityTemporalFragment'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Temporal Evolution
      - Temporal
  /temporal/entities/{entityId}/attrs/{attrId}:
    delete:
      description: Attribute from Temporal Representation of Entity deletion
      operationId: removeEntityTemporalAttr
      parameters:
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Attribute Id
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Name'
        style: simple
      responses:
        "204":
          description: No Content.
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Temporal Evolution
      - Temporal
  /temporal/entities/{entityId}/attrs/{attrId}/{instanceId}:
    delete:
      description: Attribute Instance deletion by instance id.
      operationId: removeEntityTemporalAttrInstance
      parameters:
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Attribute Id
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Name'
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      responses:
        "204":
          description: No Content.
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Temporal Evolution
      - Temporal
    patch:
      description: "Allows modifying a specific Attribute (Property or Relationship)\
        \ instance, identified by its instanceId, of a Temporal Representation of\
        \ an Entity."
      operationId: modifyEntityTemporalAttrInstance
      parameters:
      - description: Entity Id
        explode: false
        in: path
        name: entityId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      - description: Attribute Id
        explode: false
        in: path
        name: attrId
        required: true
        schema:
          $ref: '#/components/schemas/Name'
        style: simple
      - description: Instance Id
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uri
          type: string
        style: simple
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EntityTemporalFragment'
        required: true
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "404":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Temporal Evolution
      - Temporal
  /temporal/entityOperations/query:
    post:
      description: Query temporal evolution of Entities from an NGSI-LD system
      operationId: queryTemporalEntitiesOnPost
      parameters:
      - description: Link header to be used as described in the json-ld spec.
        explode: false
        in: header
        name: Link
        required: false
        schema:
          type: string
        style: simple
      - description: Size of the page to be returned
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Size of the page to be returned
        explode: true
        in: query
        name: pageAnchor
        required: false
        schema:
          format: uri
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: limit
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Options dictionary
        explode: true
        in: query
        name: options
        required: false
        schema:
          enum:
          - temporalValues
          - sysAttrs
          type: string
        style: form
      - description: Only retrieve last N instances
        explode: true
        in: query
        name: lastN
        required: false
        schema:
          minimum: 1
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "200":
          content:
            application/ld+json:
              examples:
                simple:
                  externalValue: http://localhost:8090/examples/EntityTemporalList-example.json
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
          description: OK
        "400":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
      tags:
      - Temporal Evolution
      - Temporal
      - Temporal Retrieval
components:
  parameters:
    id:
      description: Comma separated list of URIs to be retrieved
      explode: true
      in: query
      name: id
      required: false
      schema:
        type: string
      style: form
    idPattern:
      description: Regular expression that must be matched by Entity ids
      explode: true
      in: query
      name: idPattern
      required: false
      schema:
        format: regexp
        type: string
      style: form
    type:
      description: Comma separated list of Entity type names to be retrieved
      explode: true
      in: query
      name: type
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    attrs:
      description: Comma separated list of attribute names (properties or relationships)
        to be retrieved
      explode: true
      in: query
      name: attrs
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    q:
      description: Query
      explode: true
      in: query
      name: q
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    georel:
      description: Geo-relationship
      explode: true
      in: query
      name: georel
      required: false
      schema:
        $ref: '#/components/schemas/georel'
      style: form
    geometry:
      description: Geometry
      explode: true
      in: query
      name: geometry
      required: false
      schema:
        $ref: '#/components/schemas/geometryEnum'
      style: form
    tenantHeader:
      explode: false
      in: header
      name: NGSILD-Tenant
      required: true
      schema:
        default: orion
        type: string
      style: simple
    coordinates:
      description: Coordinates serialized as a string
      explode: true
      in: query
      name: coordinates
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    geoproperty:
      description: The name of the property that contains the geo-spatial data that
        will be used to resolve the geoquery
      explode: true
      in: query
      name: geoproperty
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    csf:
      description: Context Source Filter
      explode: true
      in: query
      name: csf
      required: false
      schema:
        minLength: 1
        type: string
      style: form
    limit:
      description: Pagination limit
      explode: true
      in: query
      name: limit
      required: false
      schema:
        maximum: 100
        minimum: 1
        type: integer
      style: form
    pageAnchor:
      description: Size of the page to be returned
      explode: true
      in: query
      name: pageAnchor
      required: false
      schema:
        format: uri
        type: string
      style: form
    pageSize:
      description: Size of the page to be returned
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        maximum: 100
        minimum: 1
        type: integer
      style: form
    offset:
      description: Pagination offset
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: integer
      style: form
    options:
      description: Options dictionary
      explode: true
      in: query
      name: options
      required: false
      schema:
        enum:
        - keyValues
        - sysAttrs
        type: string
      style: form
    entityId:
      description: Entity Id
      explode: false
      in: path
      name: entityId
      required: true
      schema:
        format: uri
        type: string
      style: simple
    parameters-type:
      description: Entity Type
      explode: true
      in: query
      name: type
      required: false
      schema:
        $ref: '#/components/schemas/Name'
      style: form
    parameters-options:
      description: Indicates that no attribute overwrite shall be performed
      explode: true
      in: query
      name: options
      required: false
      schema:
        enum:
        - noOverwrite
        type: string
      style: form
    attrId:
      description: Attribute Id
      explode: false
      in: path
      name: attrId
      required: true
      schema:
        $ref: '#/components/schemas/Name'
      style: simple
    subscriptionId:
      description: Subscription Id
      explode: false
      in: path
      name: subscriptionId
      required: true
      schema:
        format: uri
        type: string
      style: simple
    registrationId:
      description: Registration Id
      explode: false
      in: path
      name: registrationId
      required: true
      schema:
        format: uri
        type: string
      style: simple
    link:
      description: Link header to be used as described in the json-ld spec.
      explode: false
      in: header
      name: Link
      required: false
      schema:
        type: string
      style: simple
    timerel:
      description: Time relationship
      explode: true
      in: query
      name: timerel
      required: false
      schema:
        $ref: '#/components/schemas/timerel'
      style: form
    timeproperty:
      description: The name of the property that contains the temporal data that will
        be used to resolve the temporal query
      explode: true
      in: query
      name: timeproperty
      required: false
      schema:
        $ref: '#/components/schemas/Name'
      style: form
    time:
      description: start time for temporal query
      explode: true
      in: query
      name: timeAt
      required: false
      schema:
        format: date-time
        type: string
      style: form
    endTime:
      description: end time for temporal query
      explode: true
      in: query
      name: endTimeAt
      required: false
      schema:
        format: date-time
        type: string
      style: form
    components-parameters-options:
      description: Options dictionary
      explode: true
      in: query
      name: options
      required: false
      schema:
        enum:
        - temporalValues
        - sysAttrs
        type: string
      style: form
    lastN:
      description: Only retrieve last N instances
      explode: true
      in: query
      name: lastN
      required: false
      schema:
        minimum: 1
        type: integer
      style: form
    instanceId:
      description: Instance Id
      explode: false
      in: path
      name: instanceId
      required: true
      schema:
        format: uri
        type: string
      style: simple
  schemas:
    georelEnum:
      enum:
      - equals
      - disjoint
      - intersects
      - within
      - contains
      - overlaps
      - ^near;((maxDistance==\d+)|(minDistance==\d+))$
      type: string
    georel:
      type: string
    geometryEnum:
      type: string
    geometryType:
      type: string
    positionDefinition:
      additionalProperties: false
      description: A single position
      items:
        type: number
      maxItems: 2
      minItems: 2
      type: array
    positionArrayDefinition:
      description: An array of positions
      items:
        $ref: '#/components/schemas/positionDefinition'
      type: array
    lineStringDefinition:
      description: An array of two or more positions
      items:
        $ref: '#/components/schemas/positionDefinition'
      minItems: 2
      type: array
    linearRingDefinition:
      description: An array of four positions where the first equals the last
      items:
        $ref: '#/components/schemas/positionDefinition'
      minItems: 4
      type: array
    polygonDefinition:
      description: An array of linear rings
      items:
        $ref: '#/components/schemas/linearRingDefinition'
      type: array
    coordinates:
      oneOf:
      - $ref: '#/components/schemas/positionDefinition'
      - $ref: '#/components/schemas/positionArrayDefinition'
      - $ref: '#/components/schemas/polygonDefinition'
      - $ref: '#/components/schemas/lineStringDefinition'
    LdContext:
      type: object
    Point:
      properties:
        type:
          enum:
          - Point
          type: string
        coordinates:
          additionalProperties: false
          description: A single position
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
      type: object
    MultiPoint:
      properties:
        type:
          enum:
          - MultiPoint
          type: string
        coordinates:
          description: An array of positions
          items:
            $ref: '#/components/schemas/positionDefinition'
          type: array
      type: object
    Polygon:
      properties:
        type:
          enum:
          - Polygon
          type: string
        coordinates:
          description: An array of linear rings
          items:
            $ref: '#/components/schemas/linearRingDefinition'
          type: array
      type: object
    LineString:
      properties:
        type:
          enum:
          - LineString
          type: string
        coordinates:
          description: An array of two or more positions
          items:
            $ref: '#/components/schemas/positionDefinition'
          minItems: 2
          type: array
      type: object
    MultiLineString:
      properties:
        type:
          enum:
          - MultiLineString
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/lineStringDefinition'
          type: array
      type: object
    MultiPolygon:
      properties:
        type:
          enum:
          - MultiPolygon
          type: string
        coordinates:
          items:
            $ref: '#/components/schemas/polygonDefinition'
          type: array
      type: object
    Geometry:
      description: ' Avalid GeoJSON geometry object'
      oneOf:
      - $ref: '#/components/schemas/Point'
      - $ref: '#/components/schemas/MultiPoint'
      - $ref: '#/components/schemas/Polygon'
      - $ref: '#/components/schemas/LineString'
      - $ref: '#/components/schemas/MultiLineString'
      - $ref: '#/components/schemas/MultiPolygon'
    observedAt:
      format: date-time
      type: string
    createdAt:
      format: date-time
      type: string
    modifiedAt:
      format: date-time
      type: string
    datasetId:
      format: uri
      type: string
    instanceId:
      format: uri
      type: string
    Property:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/Relationship'
      properties:
        type:
          enum:
          - Property
          type: string
        value:
          oneOf:
          - type: string
          - type: number
          - type: boolean
          - type: object
          - items:
              oneOf:
              - type: string
              - type: number
              - type: boolean
              - type: object
            type: array
        observedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
        datasetId:
          format: uri
          type: string
        instanceId:
          format: uri
          type: string
        unitCode:
          type: string
      required:
      - type
      - value
      type: object
    Relationship:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/Relationship'
      properties:
        type:
          enum:
          - Relationship
          type: string
        object:
          format: uri
          type: string
        observedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
        datasetId:
          format: uri
          type: string
        instanceId:
          format: uri
          type: string
      required:
      - object
      - type
      type: object
    GeoProperty:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/Geometry'
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/Relationship'
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        instanceId: https://openapi-generator.tech
        observedAt: 2000-01-23T04:56:07.000+00:00
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        unitCode: unitCode
        datasetId: https://openapi-generator.tech
        type: GeoProperty
        value: "{}"
      properties:
        type:
          enum:
          - GeoProperty
          type: string
        value:
          type: object
        observedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
        datasetId:
          format: uri
          type: string
        instanceId:
          format: uri
          type: string
        unitCode:
          type: string
      required:
      - type
      - value
      type: object
    Name:
      description: NGSI-LD Name
      minLength: 1
      pattern: "^((\\d|[a-zA-Z]|_)+(:(\\d|[a-zA-Z]|_)+)?(#\\d+)?)$"
      type: string
    EntityFragment:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/Relationship'
        - $ref: '#/components/schemas/GeoProperty'
      properties:
        '@context':
          type: object
        location:
          $ref: '#/components/schemas/GeoProperty'
        observationSpace:
          $ref: '#/components/schemas/GeoProperty'
        operationSpace:
          $ref: '#/components/schemas/GeoProperty'
        id:
          format: uri
          type: string
        type:
          description: NGSI-LD Name
          minLength: 1
          pattern: "^((\\d|[a-zA-Z]|_)+(:(\\d|[a-zA-Z]|_)+)?(#\\d+)?)$"
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
      type: object
    Entity:
      additionalProperties:
        oneOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/Relationship'
        - $ref: '#/components/schemas/GeoProperty'
      properties:
        '@context':
          type: object
        location:
          $ref: '#/components/schemas/GeoProperty'
        observationSpace:
          $ref: '#/components/schemas/GeoProperty'
        operationSpace:
          $ref: '#/components/schemas/GeoProperty'
        id:
          format: uri
          type: string
        type:
          description: NGSI-LD Name
          minLength: 1
          pattern: "^((\\d|[a-zA-Z]|_)+(:(\\d|[a-zA-Z]|_)+)?(#\\d+)?)$"
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
      type: object
    EntityList:
      items:
        $ref: '#/components/schemas/Entity'
      type: array
    ProblemDetails:
      properties:
        type:
          format: uri
          type: string
        title:
          type: string
        detail:
          type: string
      required:
      - type
      type: object
    NotUpdatedDetails:
      properties:
        attributeName:
          pattern: ""
          type: string
        reason:
          minLength: 1
          type: string
      type: object
    UpdateResult:
      properties:
        updated:
          items:
            pattern: ""
            type: string
          type: array
        notUpdated:
          items:
            $ref: '#/components/schemas/NotUpdatedDetails'
          type: array
      type: object
    EntityInfo:
      example:
        id: "{}"
        type: type
        idPattern: idPattern
      properties:
        id:
          type: object
        type:
          type: string
        idPattern:
          format: regex
          type: string
      required:
      - type
      type: object
    GeoQuery:
      example:
        geoproperty: geoproperty
        coordinates:
        - ""
        - ""
        geometry: geometry
        georel: georel
      properties:
        georel:
          type: string
        coordinates:
          items:
            oneOf:
            - type: integer
            - $ref: '#/components/schemas/coordinates'
          type: array
        geometry:
          type: string
        geoproperty:
          type: string
      required:
      - coordinates
      - geometry
      - georel
      type: object
    SubscriptionFragment:
      properties:
        '@context':
          type: object
        entities:
          items:
            $ref: '#/components/schemas/EntityInfo'
          minItems: 1
          type: array
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        watchedAttributes:
          items:
            $ref: '#/components/schemas/Name'
          minItems: 1
          type: array
          uniqueItems: true
        timeInterval:
          minimum: 0
          type: number
        expires:
          format: date-time
          type: string
        isActive:
          type: boolean
        throttling:
          minimum: 1
          type: number
        q:
          type: string
        geoQ:
          $ref: '#/components/schemas/GeoQuery'
        csf:
          type: string
      type: object
    Endpoint:
      properties:
        uri:
          format: uri
          type: string
        accept:
          enum:
          - application/ld+json
          type: string
      required:
      - uri
      type: object
    NotificationParams:
      properties:
        attributes:
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        format:
          type: string
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        status:
          enum:
          - ok
          - failed
          type: string
        timesSent:
          minimum: 1
          type: number
        lastNotification:
          format: date-time
          type: string
        lastFailure:
          format: date-time
          type: string
        lastSuccess:
          format: date-time
          type: string
      required:
      - endpoint
      type: object
    Subscription:
      allOf:
      - $ref: '#/components/schemas/SubscriptionFragment'
      - $ref: '#/components/schemas/Subscription_allOf'
    SubscriptionList:
      items:
        $ref: '#/components/schemas/Subscription'
      type: array
    RegistrationInfo:
      properties:
        entities:
          items:
            $ref: '#/components/schemas/EntityInfo'
          minItems: 1
          type: array
        properties:
          items:
            $ref: '#/components/schemas/Name'
          minItems: 1
          type: array
          uniqueItems: true
        relationships:
          items:
            $ref: '#/components/schemas/Name'
          minItems: 1
          type: array
          uniqueItems: true
      type: object
    TimeInterval:
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      required:
      - start
      type: object
    ContextSourceRegistrationFragment:
      additionalProperties: true
      properties:
        '@context':
          type: object
        information:
          items:
            $ref: '#/components/schemas/RegistrationInfo'
          minItems: 1
          type: array
        observationInterval:
          $ref: '#/components/schemas/TimeInterval'
        managementInterval:
          $ref: '#/components/schemas/TimeInterval'
        location:
          $ref: '#/components/schemas/Geometry'
        observationSpace:
          $ref: '#/components/schemas/Geometry'
        operationSpace:
          $ref: '#/components/schemas/Geometry'
        expires:
          format: date-time
          type: string
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        endpoint:
          format: uri
          type: string
      type: object
    ContextSourceRegistration:
      allOf:
      - $ref: '#/components/schemas/ContextSourceRegistrationFragment'
      - $ref: '#/components/schemas/ContextSourceRegistration_allOf'
    ContextSourceRegistrationList:
      items:
        $ref: '#/components/schemas/ContextSourceRegistration'
      type: array
    BatchEntityError:
      properties:
        entityId:
          format: uri
          type: string
        error:
          $ref: '#/components/schemas/ProblemDetails'
      type: object
    BatchOperationResult:
      properties:
        success:
          items:
            format: uri
            type: string
          type: array
        error:
          items:
            $ref: '#/components/schemas/BatchEntityError'
          type: array
      type: object
    timerel:
      enum:
      - before
      - after
      - between
      type: string
    EntityTemporalFragment:
      additionalProperties:
        oneOf:
        - items:
            $ref: '#/components/schemas/Property'
          minItems: 1
          type: array
        - items:
            $ref: '#/components/schemas/Relationship'
          minItems: 1
          type: array
        - items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
      properties:
        '@context':
          type: object
        location:
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
        observationSpace:
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
        operationSpace:
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
        id:
          format: uri
          type: string
        type:
          description: NGSI-LD Name
          minLength: 1
          pattern: "^((\\d|[a-zA-Z]|_)+(:(\\d|[a-zA-Z]|_)+)?(#\\d+)?)$"
          type: string
      type: object
    EntityTemporal:
      additionalProperties:
        oneOf:
        - items:
            $ref: '#/components/schemas/Property'
          minItems: 1
          type: array
        - items:
            $ref: '#/components/schemas/Relationship'
          minItems: 1
          type: array
        - items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        operationSpace:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          unitCode: unitCode
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value: "{}"
        - createdAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          unitCode: unitCode
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value: "{}"
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        location:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          unitCode: unitCode
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value: "{}"
        - createdAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          unitCode: unitCode
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value: "{}"
        id: https://openapi-generator.tech
        type: type
        '@context': "{}"
        observationSpace:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          unitCode: unitCode
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value: "{}"
        - createdAt: 2000-01-23T04:56:07.000+00:00
          instanceId: https://openapi-generator.tech
          observedAt: 2000-01-23T04:56:07.000+00:00
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          unitCode: unitCode
          datasetId: https://openapi-generator.tech
          type: GeoProperty
          value: "{}"
      properties:
        '@context':
          type: object
        location:
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
        observationSpace:
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
        operationSpace:
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
          type: array
        id:
          format: uri
          type: string
        type:
          description: NGSI-LD Name
          minLength: 1
          pattern: "^((\\d|[a-zA-Z]|_)+(:(\\d|[a-zA-Z]|_)+)?(#\\d+)?)$"
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
      required:
      - id
      - type
      type: object
    EntityTemporalList:
      items:
        $ref: '#/components/schemas/EntityTemporal'
      type: array
    TemporalQuery:
      example:
        timerel: timerel
        endTimeAt: 2000-01-23T04:56:07.000+00:00
        timeAt: 2000-01-23T04:56:07.000+00:00
        timeproperty: timeproperty
      properties:
        timerel:
          type: string
        timeAt:
          format: date-time
          type: string
        endTimeAt:
          format: date-time
          type: string
        timeproperty:
          type: string
      type: object
    Query:
      example:
        geoQ:
          geoproperty: geoproperty
          coordinates:
          - ""
          - ""
          geometry: geometry
          georel: georel
        q: q
        entities:
          id: "{}"
          type: type
          idPattern: idPattern
        csf: csf
        type: Query
        attrs:
        - attrs
        - attrs
        temporalQ:
          timerel: timerel
          endTimeAt: 2000-01-23T04:56:07.000+00:00
          timeAt: 2000-01-23T04:56:07.000+00:00
          timeproperty: timeproperty
      properties:
        type:
          enum:
          - Query
          type: string
        entities:
          $ref: '#/components/schemas/EntityInfo'
        attrs:
          items:
            type: string
          type: array
        q:
          type: string
        geoQ:
          $ref: '#/components/schemas/GeoQuery'
        temporalQ:
          $ref: '#/components/schemas/TemporalQuery'
        csf:
          type: string
      type: object
    Subscription_allOf:
      properties:
        id:
          format: uri
          type: string
        type:
          enum:
          - Subscription
          type: string
        notification:
          $ref: '#/components/schemas/NotificationParams'
        status:
          enum:
          - active
          - paused
          - expired
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
      type: object
    ContextSourceRegistration_allOf:
      properties:
        id:
          format: uri
          type: string
        type:
          enum:
          - ContextSourceRegistration
          type: string
        createdAt:
          format: date-time
          type: string
        modifiedAt:
          format: date-time
          type: string
      required:
      - endpoint
      - id
      - information
      - type
      type: object
